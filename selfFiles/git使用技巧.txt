初始安装git
  1 git仓库源 
      git remote show origin  # 查看当前 远程仓库地址
      git remote -v 查看远程仓库的地址
      git remote set-url origin <new url> # 修改 远程地址 为新的 地址 <new url> 改为新的 地址
      git remote rm origin 删除现有远程仓库
      git remote add origin url 添加新远程仓库
      
  2 权限  
        去除ssl   git config --global http.sslVerify false
        是否有远程账户拉取推送权限问题

  3 配置用户
         git config --global -l 查看用户配置
         git config --global user.email “you@example.com” 提交commit 记录用户信息
         git config --global user.name “Your Name”             提交commit 记录用户信息
   
  4 取消代理
         git config --global --unset http.proxy
         git config --global --unset https.proxy



git相关操作
   git rebase --continue 继续
   git rebase --skip  跳过（注意此操作中当前分支的修改会直接覆盖目标分支的冲突部分）
   git rebase --abort 推出本次 rebase 操作

   git rebase -i 呈现提取的 commit 信息，可编辑合并指定的多个commit为一个commit, 
                                                                                         => 编辑完通过 :wq （或者 :x） 保存退出后
                        若修改了已推送远程的commit信息 push时 需要加上 -f 参数

   git commit -m xxx --amend 将刚add的内容合并到前一个commit (前提：前一个commit 未推送合并， 仅本地commit)
   git revert commit标识 用一次新的commit来回滚之前的commit
   git reset 是直接删除指定的commit 
   git init --bare mueas.git　　　　#注意，这里最好带上--bare指定一个空仓库，否则客户端clone后，提交代码时，会遇到错误，要做系列配置
   git pull --rebase origin xxx  不再出现自动生成的 merge commit在提交记录里

   git branch -vv // 查看本地分支与远程分支关联关系
   git branch -a // 查看所有分支
   git branch -r // 查看远程分支
	
   git fetch origin branch1:branch2  使用远程branch1分支在本地创建branch2(但不会切换到该分支)
                                                          不存在branch2分支, 则会自动创建一个新的branch2分支
                                                          如果本地存在branch2分支, 并且是`fast forward', 则自动合并两个分支, 否则, 会阻止以上操作
   git switch -c branch1 origin/branch1 新建一个本地branch1分支，并同步远程branch1分支代码

git config --global --unset http.proxy 
git config --global --unset https.proxy

   git push origin --delete remoteBranchName 删除远程分支
   git push origin :remoteBranchName 删除远程分支
   git push origin -d remoteBranchName 删除远程分支
   git push -u origin master 如果当前分支与多个主机存在追踪关系，则可以使用-u选项指定一个默认主机，这样后面就可以不加任何参数使用git push


   git remote -v 查看远程仓库情况
   git remote add  xxx url 添加远程仓库地址（可以添加不同品类的仓库，如git，gitee等 -- 多个远程地址仓库）
   git remote rm  xxx 删除对于的远程仓库地址 





场景
     1  想切换分支 或rebase  或merge，但还没开发完一个功能，不想生成commit, 进行前面的切换分支 或rebase  或merge操作
            git stash暂存缓冲区 -- 避免生产过多无效commit  
                                    => 操作完后，切回分支，恢复未提交的内容，继续开发，git  stash pop 删除缓冲区最后一个缓存，并恢复开发内容 -- 推荐
                                                                                                                             git  stash apply 保留缓存区开发内容，并恢复开发内容
     2 想合并多个commit 内容  git rebase -i
     3 前面提交了一次，发现前面的提交不完善，再次修改后，不想新生成commit 提交补充的内容
             git add之后， git commit -m xxx --amend

